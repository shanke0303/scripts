(()=>{var e={430:e=>{"use strict";e.exports=require("./tg-cli")},747:e=>{"use strict";e.exports=require("fs")},622:e=>{"use strict";e.exports=require("path")},58:e=>{"use strict";e.exports=require("readline")}},o={};function s(r){var t=o[r];if(void 0!==t)return t.exports;var n=o[r]={exports:{}};return e[r](n,n.exports,s),n.exports}(()=>{s(747),s(622);const e=s(430);!async function(){const o=s(58),r=new e;console.log("Start tg-cli-cmd...");const t=o.createInterface({input:process.stdin,output:process.stdout});function n(e){return new Promise(((o,s)=>{t.question(e,(e=>{o(e.trim())}))}))}let a,c,l,g,i;try{c=await r.getCurrentUser()}catch(e){console.log("🙅 当前用户获取失败:",e)}async function u(){if(a=await n("请输入需要登录的手机号码: "),l=a,a){console.log(`正在为 ${l} 发送验证码...`);try{g=await r.sendCode(l),console.log("😄 验证码已发送,请注意查收"),m()}catch(e){console.log("❌ 验证码发送失败"),console.log(e),u()}}else console.log("🙅 请输入正确的手机号"),u()}async function m(){if(a=await n("请输入收到的验证码: "),i=a,a){console.log(`手机号:${l},验证码:${i},开始登录...`);try{"auth.authorizationSignUpRequired"===(await r.signIn(l,g,i))._?(console.log(`❌ ${l},还未注册.请到Telegram注册哦`),_()):(c=await r.getCurrentUser(),d())}catch(e){"SESSION_PASSWORD_NEEDED"===e.error_message?(console.log("❌ 你可能打开了二步验证,请关闭后重试"),_()):"PHONE_CODE_EXPIRED"===e.error_message?(console.log("❌ 验证码已过期,请重新获取验证码"),u()):"PHONE_CODE_INVALID"===e.error_message?(console.log("❌ 验证码错误"),m()):"PHONE_NUMBER_UNOCCUPIED"===e.error_message?(console.log(`❌ ${l},还未注册.请到Telegram注册哦`),_()):(console.log("❌ 登录失败"),console.log(e),_())}}else console.log("🙅 请输入正确的验证码"),m()}function d(){const e=`${c.user.last_name} ${c.user.first_name}`;console.log(`👏 Hi ${e},请输入指令使用,需要帮助请输入help.`),async function o(){a=await n(`${e} > `);const s=function(e){const o=e.indexOf("?");return o>0?{cmd:e.substring(0,o),args:e.substr(o+1).split("&")}:{cmd:e,args:[]}}(a);if(!s)return void o();switch(s.cmd){case"me":try{c=await r.getCurrentUser(),console.log(c)}catch(e){console.log("⚠ 当前用户获取失败"),console.log(e)}break;case"logout":try{await r.logOut(),c=null,_()}catch(e){console.log(e)}break;case"peer":const e=s.args[0]&&"@"===s.args[0][0]?s.args[0].substr(1):s.args[0];if(e)try{console.log("found:",await r.getPeerByName(e))}catch(o){"USERNAME_INVALID"===o.error_message||"USERNAME_NOT_OCCUPIED"===o.error_message?console.log(`⚠ 没有找到用户 ${e}`):(console.log("❌ 查找用户失败"),console.log(o))}else console.log(p);break;case"msg":const o=s.args[0]&&"@"===s.args[0][0]?s.args[0].substr(1):s.args[0],t=s.args[1],n=s.args[2];if(o&&t)try{await r.msg({username:o,message:t,schedule_date:n}),console.log("😄 消息已发送")}catch(e){"USERNAME_INVALID"===e.error_message||"USERNAME_NOT_OCCUPIED"===e.error_message?console.log(`⚠ 没有找到用户 ${o}`):(console.log("❌ 消息发送失败"),console.log(e))}else console.log(p);break;case"help":console.log(p);break;case"exit":console.log("👋 Bye Bye."),_();break;default:console.log(p)}o()}()}function _(){t.close(),console.log("Exit tg-cli-cmd."),process.exit()}c?d():(a=await n("使用功能需要先登录,是否进行登录?{Y/n}: "),a&&"y"!==a.toLowerCase()?_():u());const p="👀 Look carefully please.\nInput template: <command>[?arg1&arg2...]\nCommands:\n  me                                                Get the current user info\n  peer?<username>                                   Resolve a @username to get peer info\n  msg?<username>&<message>[&[schedule_date]]        Send a message to user,[schedule_date] fomart:yyyy-MM-dd mm:HH:ss\n  logOut                                            Log out current user\n  help                                              Show the tg-cli-cmd useage tips\n  exit                                              Exit tg-cli-cmd\n"}()})()})();